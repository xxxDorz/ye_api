"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("@umijs/utils");
const fs_1 = require("fs");
const path_1 = require("path");
const checkAntd_1 = require("./utils/checkAntd");
const DIR_NAME = 'plugin-keepalive';
exports.default = (api) => {
    // 和 tabsLayout 插件组合使用
    const { tabsLayout } = api.userConfig;
    api.describe({
        key: 'keepalive',
        config: {
            schema(Joi) {
                return Joi.array().items(Joi.alternatives(Joi.string(), Joi.any()));
            },
        },
        enableBy: api.EnableBy.config,
    });
    api.addRuntimePluginKey(() => 'getKeepAlive');
    // only dev or build running
    if (!['dev', 'build', 'dev-config', 'preview'].includes(api.name))
        return;
    api.onStart(() => {
        utils_1.logger.info('Using KeepAlive Plugin');
    });
    const configStringify = (config) => {
        return config.map((item) => {
            if (item instanceof RegExp) {
                return item;
            }
            return `'${item}'`;
        });
    };
    api.onGenerateFiles(() => {
        const isAntdVersionNew = (0, checkAntd_1.checkAntdVersion)(api);
        const contextTpl = (0, fs_1.readFileSync)((0, path_1.join)(__dirname, '..', 'templates', 'keepalive', 'context.tpl'), 'utf-8');
        const hasInitialStatePlugin = api.config.initialState;
        api.writeTmpFile({
            path: `${DIR_NAME}/context.tsx`,
            noPluginDir: true,
            content: utils_1.Mustache.render(contextTpl, {
                hasTabsLayout: !!tabsLayout,
                hasCustomTabs: !!tabsLayout?.hasCustomTabs,
                hasDropdown: !!tabsLayout?.hasDropdown,
                hasFixedHeader: !!tabsLayout?.hasFixedHeader,
                isPluginModelEnable: hasInitialStatePlugin,
                hasIntl: !!api.config.locale,
                isNewTabs: isAntdVersionNew,
            }),
        });
        const runtimeTpl = (0, fs_1.readFileSync)((0, path_1.join)(__dirname, '..', 'templates', 'keepalive', 'runtime.tpl'), 'utf-8');
        api.writeTmpFile({
            path: `${DIR_NAME}/runtime.tsx`,
            noPluginDir: true,
            content: utils_1.Mustache.render(runtimeTpl, {
                hasTabsLayout: !!tabsLayout,
                keepalive: configStringify(api.userConfig.keepalive || []),
                hasGetKeepalive: api.appData.appJS?.exports.includes('getKeepAlive'),
            }),
        });
        api.writeTmpFile({
            path: `${DIR_NAME}/support.tsx`,
            noPluginDir: true,
            content: `
import { keepaliveEmitter } from './context';

export function dropByCacheKey(path: string) {
  keepaliveEmitter.emit({type:'dropByCacheKey', payload: {
    path
  }});
}
`,
        });
        // index.ts for export
        api.writeTmpFile({
            noPluginDir: true,
            path: `${DIR_NAME}/index.tsx`,
            content: `
export { KeepAliveContext,useKeepOutlets } from './context';
export { dropByCacheKey } from './support';
`,
        });
    });
    api.addRuntimePlugin(() => [
        (0, path_1.join)(api.paths.absTmpPath, `${DIR_NAME}/runtime.tsx`),
    ]);
};
