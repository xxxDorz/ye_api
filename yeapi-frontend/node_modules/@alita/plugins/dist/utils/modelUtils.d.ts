import type { AlitaApi } from '@alita/types';
import * as t from '@umijs/bundler-utils/compiled/babel/types';
interface IOpts {
    contentTest?: (content: string) => Boolean;
    astTest?: (opts: {
        node: t.Node;
        content: string;
    }) => Boolean;
}
export declare class Model {
    file: string;
    namespace: string;
    id: string;
    exportName: string;
    constructor(file: string, id: number);
}
export declare class ModelUtils {
    api: AlitaApi;
    opts: IOpts;
    count: number;
    constructor(api: AlitaApi | null, opts: IOpts);
    getAllModels(opts: {
        extraModels: string[];
    }): Model[];
    getModels(opts: {
        base: string;
        pattern?: string;
    }): string[];
    isModelValid(opts: {
        content: string;
        file: string;
    }): boolean;
    static getModelsContent(models: Model[]): string;
}
export {};
