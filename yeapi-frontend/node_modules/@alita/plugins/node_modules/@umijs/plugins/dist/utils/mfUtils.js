var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/utils/mfUtils.ts
var mfUtils_exports = {};
__export(mfUtils_exports, {
  toRemotesCodeString: () => toRemotesCodeString
});
module.exports = __toCommonJS(mfUtils_exports);
function isSimpleRemote(r) {
  return r.entry;
}
function isRemoteEntries(r) {
  return r.entries && r.keyResolver;
}
function toRemotesCodeString(remotes) {
  const res = [];
  for (const r of remotes) {
    const aliasName = r.aliasName || r.name;
    const remoteName = r.name;
    if (isSimpleRemote(r)) {
      res.push(`${aliasName}: {
  aliasName: "${aliasName}",
  remoteName: "${remoteName}",        
  entry: "${r.entry}"
}`);
    }
    if (isRemoteEntries(r)) {
      res.push(`${aliasName}: {
  aliasName: "${aliasName}",
  remoteName: "${remoteName}",        
  entry: (${JSON.stringify(r.entries)})[${r.keyResolver}]
}`);
    }
  }
  return res.join(",\n");
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  toRemotesCodeString
});
