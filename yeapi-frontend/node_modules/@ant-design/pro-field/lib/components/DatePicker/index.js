"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useDatePickerStyle = exports.default = void 0;
var _regeneratorRuntime2 = _interopRequireDefault(require("@babel/runtime/helpers/regeneratorRuntime"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _proProvider = require("@ant-design/pro-provider");
var _proUtils = require("@ant-design/pro-utils");
var _antd = require("antd");
var _dayjs = _interopRequireDefault(require("dayjs"));
var _weekOfYear = _interopRequireDefault(require("dayjs/plugin/weekOfYear"));
var _react = _interopRequireWildcard(require("react"));
var _configProvider = require("antd/lib/config-provider");
require("antd/lib/date-picker/style");
var _jsxRuntime = require("react/jsx-runtime");
// 兼容代码-----------

//----------------------

_dayjs.default.extend(_weekOfYear.default);
var formatDate = function formatDate(text, format) {
  if (!text) {
    return '-';
  }
  if (typeof format === 'function') {
    return format((0, _dayjs.default)(text));
  } else {
    return (0, _dayjs.default)(text).format(format || 'YYYY-MM-DD');
  }
};
var useDatePickerStyle = function useDatePickerStyle() {
  var _useContext = (0, _react.useContext)(_configProvider.ConfigContext || _antd.ConfigProvider.ConfigContext),
    getPrefixCls = _useContext.getPrefixCls;
  var prefixCls = getPrefixCls('pro-field-date-picker');

  // css
  var css = (0, _proUtils.useStyle)('DatePicker', function (token) {
    return (0, _defineProperty2.default)({}, ".".concat(prefixCls, "-light"), (0, _defineProperty2.default)({}, "".concat(token.antCls, "-picker,").concat(token.antCls, "-calendar-picker"), {
      position: 'absolute',
      width: '80px',
      height: '28px',
      overflow: 'hidden',
      visibility: 'hidden'
    }));
  });
  return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, css), {}, {
    prefixCls: prefixCls
  });
};

/**
 * 日期选择组件
 *
 * @param
 */
exports.useDatePickerStyle = useDatePickerStyle;
var FieldDatePicker = function FieldDatePicker(_ref2, ref) {
  var _ConfigProvider$useCo;
  var text = _ref2.text,
    mode = _ref2.mode,
    format = _ref2.format,
    label = _ref2.label,
    light = _ref2.light,
    render = _ref2.render,
    renderFormItem = _ref2.renderFormItem,
    plain = _ref2.plain,
    showTime = _ref2.showTime,
    fieldProps = _ref2.fieldProps,
    picker = _ref2.picker,
    bordered = _ref2.bordered,
    lightLabel = _ref2.lightLabel,
    labelTrigger = _ref2.labelTrigger;
  var intl = (0, _proProvider.useIntl)();
  var _ref3 = (_antd.ConfigProvider === null || _antd.ConfigProvider === void 0 ? void 0 : (_ConfigProvider$useCo = _antd.ConfigProvider.useConfig) === null || _ConfigProvider$useCo === void 0 ? void 0 : _ConfigProvider$useCo.call(_antd.ConfigProvider)) || {
      componentSize: 'middle'
    },
    componentSize = _ref3.componentSize;
  var size = componentSize;
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    open = _useState2[0],
    setOpen = _useState2[1];
  var _useDatePickerStyle = useDatePickerStyle(),
    hashId = _useDatePickerStyle.hashId,
    prefixCls = _useDatePickerStyle.prefixCls,
    wrapSSR = _useDatePickerStyle.wrapSSR;
  if (mode === 'read') {
    var dom = formatDate(text, fieldProps.format || format);
    if (render) {
      return render(text, (0, _objectSpread2.default)({
        mode: mode
      }, fieldProps), /*#__PURE__*/(0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {
        children: dom
      }));
    }
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {
      children: dom
    });
  }
  if (mode === 'edit' || mode === 'update') {
    var _dom;
    var disabled = fieldProps.disabled,
      value = fieldProps.value,
      onChange = fieldProps.onChange,
      allowClear = fieldProps.allowClear,
      _fieldProps$placehold = fieldProps.placeholder,
      placeholder = _fieldProps$placehold === void 0 ? intl.getMessage('tableForm.selectPlaceholder', '请选择') : _fieldProps$placehold;
    var momentValue = (0, _proUtils.parseValueToDay)(value);
    if (light) {
      var valueStr = momentValue && momentValue.format(format) || '';
      _dom = /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "".concat(prefixCls, "-light ").concat(hashId),
        onClick: function onClick(e) {
          var _lightLabel$current, _lightLabel$current$l, _lightLabel$current$l2;
          // 点击label切换下拉菜单
          var isLabelClick = lightLabel === null || lightLabel === void 0 ? void 0 : (_lightLabel$current = lightLabel.current) === null || _lightLabel$current === void 0 ? void 0 : (_lightLabel$current$l = _lightLabel$current.labelRef) === null || _lightLabel$current$l === void 0 ? void 0 : (_lightLabel$current$l2 = _lightLabel$current$l.current) === null || _lightLabel$current$l2 === void 0 ? void 0 : _lightLabel$current$l2.contains(e.target);
          if (isLabelClick) {
            setOpen(!open);
          } else {
            setOpen(true);
          }
        },
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_antd.DatePicker, (0, _objectSpread2.default)((0, _objectSpread2.default)({
          picker: picker,
          showTime: showTime,
          format: format,
          ref: ref
        }, fieldProps), {}, {
          value: momentValue,
          onChange: /*#__PURE__*/function () {
            var _ref4 = (0, _asyncToGenerator2.default)( /*#__PURE__*/(0, _regeneratorRuntime2.default)().mark(function _callee(v) {
              return (0, _regeneratorRuntime2.default)().wrap(function _callee$(_context) {
                while (1) switch (_context.prev = _context.next) {
                  case 0:
                    _context.next = 2;
                    return onChange === null || onChange === void 0 ? void 0 : onChange(v);
                  case 2:
                    _context.next = 4;
                    return setOpen(false);
                  case 4:
                  case "end":
                    return _context.stop();
                }
              }, _callee);
            }));
            return function (_x) {
              return _ref4.apply(this, arguments);
            };
          }(),
          onOpenChange: function onOpenChange(isOpen) {
            if (!labelTrigger) {
              setOpen(isOpen);
            }
          },
          open: open
        })), /*#__PURE__*/(0, _jsxRuntime.jsx)(_proUtils.FieldLabel, {
          label: label,
          disabled: disabled,
          placeholder: placeholder,
          size: size,
          value: valueStr,
          onClear: function onClear() {
            onChange === null || onChange === void 0 ? void 0 : onChange(null);
          },
          allowClear: allowClear,
          bordered: bordered,
          expanded: open,
          ref: lightLabel
        })]
      });
    } else {
      _dom = /*#__PURE__*/(0, _jsxRuntime.jsx)(_antd.DatePicker, (0, _objectSpread2.default)((0, _objectSpread2.default)({
        picker: picker,
        showTime: showTime,
        format: format,
        placeholder: placeholder,
        bordered: plain === undefined ? true : !plain,
        ref: ref
      }, fieldProps), {}, {
        value: momentValue
      }));
    }
    if (renderFormItem) {
      return renderFormItem(text, (0, _objectSpread2.default)({
        mode: mode
      }, fieldProps), _dom);
    }
    return wrapSSR(_dom);
  }
  return null;
};
var _default = /*#__PURE__*/_react.default.forwardRef(FieldDatePicker);
exports.default = _default;