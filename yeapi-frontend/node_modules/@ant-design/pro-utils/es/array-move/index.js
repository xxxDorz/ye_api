import _toConsumableArray from "@babel/runtime/helpers/esm/toConsumableArray";
import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
/**
 * @param  {ValueType[]} array
 * @param  {number} fromIndex
 * @param  {number} toIndex
 */
export function arrayMoveMutable(array, fromIndex, toIndex) {
  var startIndex = fromIndex < 0 ? array.length + fromIndex : fromIndex;
  if (startIndex >= 0 && startIndex < array.length) {
    var endIndex = toIndex < 0 ? array.length + toIndex : toIndex;
    var _array$splice = array.splice(fromIndex, 1),
      _array$splice2 = _slicedToArray(_array$splice, 1),
      item = _array$splice2[0];
    array.splice(endIndex, 0, item);
  }
}

/**
 * @param  {T[]} array
 * @param  {number} fromIndex
 * @param  {number} toIndex
 * @returns T
 */
export function arrayMoveImmutable(_ref) {
  var array = _ref.array,
    fromIndex = _ref.fromIndex,
    toIndex = _ref.toIndex;
  var newArray = _toConsumableArray(array);
  arrayMoveMutable(newArray, fromIndex, toIndex);
  return newArray;
}