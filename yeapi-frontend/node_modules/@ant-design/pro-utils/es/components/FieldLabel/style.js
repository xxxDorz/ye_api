import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { useStyle as useAntdStyle } from '@ant-design/pro-provider';
var genProStyle = function genProStyle(token) {
  var _$concat$concat, _small;
  return _defineProperty({}, token.componentCls, {
    display: 'inline-flex',
    gap: '4px',
    alignItems: 'center',
    height: '30px',
    paddingBlock: 0,
    paddingInline: 8,
    fontSize: token.fontSize,
    lineHeight: '30px',
    borderRadius: '2px',
    cursor: 'pointer',
    '&:hover': {
      backgroundColor: token.colorBgTextHover
    },
    '*': {
      boxSizing: 'border-box'
    },
    '&-active': _defineProperty({
      paddingBlock: 0,
      paddingInline: 12,
      backgroundColor: token.colorBgTextHover
    }, "&".concat(token.componentCls, "-allow-clear:hover:not(").concat(token.componentCls, "-disabled)"), (_$concat$concat = {}, _defineProperty(_$concat$concat, "".concat(token.componentCls, "-arrow"), {
      display: 'none'
    }), _defineProperty(_$concat$concat, "".concat(token.componentCls, "-close"), {
      display: 'inline-flex'
    }), _$concat$concat)),
    '&-icon': _defineProperty({
      height: '12px',
      paddingBlock: 1,
      paddingInline: 1,
      color: token.colorIcon,
      fontSize: '12px',
      verticalAlign: 'middle'
    }, "&".concat(token.componentCls, "-close"), {
      display: 'none',
      height: 14,
      alignItems: 'center',
      justifyContent: 'center',
      width: 14,
      color: token.colorBgContainer,
      fontSize: 8,
      backgroundColor: token.colorTextPlaceholder,
      borderRadius: '50%',
      '&:hover': {
        color: token.colorIcon
      }
    }),
    '&-disabled': _defineProperty({
      color: token.colorTextPlaceholder,
      cursor: 'not-allowed'
    }, "".concat(token.componentCls, "-icon"), {
      color: token.colorTextPlaceholder
    }),
    '&-small': (_small = {
      height: '24px',
      paddingBlock: 0,
      paddingInline: 4,
      fontSize: token.fontSizeSM,
      lineHeight: '24px'
    }, _defineProperty(_small, "&".concat(token.componentCls, "-active"), {
      paddingBlock: 0,
      paddingInline: 8
    }), _defineProperty(_small, "".concat(token.componentCls, "-icon"), {
      paddingBlock: 0,
      paddingInline: 0
    }), _defineProperty(_small, "".concat(token.componentCls, "-close"), {
      marginBlockStart: '-2px',
      paddingBlock: 4,
      paddingInline: 4,
      fontSize: '6px'
    }), _small),
    '&-bordered': {
      height: '32px',
      paddingBlock: 0,
      paddingInline: 12,
      border: "".concat(token.lineWidth, "px solid ").concat(token.colorBorder),
      borderRadius: '@border-radius-base'
    },
    '&-bordered&-small': {
      height: '24px',
      paddingBlock: 0,
      paddingInline: 8
    },
    '&-bordered&-active': {
      backgroundColor: token.colorBgContainer
    }
  });
};
export function useStyle(prefixCls) {
  return useAntdStyle('FieldLabel', function (token) {
    var proToken = _objectSpread(_objectSpread({}, token), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProStyle(proToken)];
  });
}